define(['uiComponent', 'calendar', 'mageUtils', 'moment', 'Magento_Checkout/js/model/quote', 'ko'], function (Component, calendar, utils, moment, quote, ko) {
    return Component.extend({
        defaults: {
            displayArea: 'shippingAdditional',
            template: 'Biztech_Manufacturer/example',
            rendererTemplates: {},
            options: {
                minDate: new Date(),
                showsTime: true,
            },
            shiftedValue: '',
            timeOffset: 0,
            validationParams: {
                dateFormat: '${ $.outputDateFormat }'
            },
            outputDateFormat: 'MM/dd/y',
            inputDateFormat: 'y-MM-dd',
            pickerDateTimeFormat: '',
            pickerDefaultDateFormat: 'MM/dd/y',
            // ICU Date Format
            pickerDefaultTimeFormat: 'h:mm a',
            // ICU Time Format
            elementTmpl: 'ui/form/element/date',
            listens: {
                'value': 'onValueChange',
                'shiftedValue': 'onShiftedValueChange'
            },
        },
        initialize: function () {
            this._super();
            this.sayHello = "Hello this is content populated with KO!";
            this.time = Date();
            this.myDateFormat = window.deliverydateConfig.dateFormat;
            self.availableMeals = [
                {mealName: "Standard (sandwich)", price: 0, place: ['India', 'Bahrain', 'Dubai']},
                {mealName: "Premium (lobster)", price: 34.95, place: ['India', 'Bahrain', 'Dubai']},
                {mealName: "Ultimate (whole zebra)", price: 290, place: ['India', 'Bahrain', 'Dubai']}
            ];
            this.getTimeSlot = ko.observableArray(availableMeals);
            this.places = ko.observableArray(['India', 'Bahrain', 'London']);

            this.observe(['time', 'calendar', 'shiftedValue', 'getTimeSlot', 'places']);
            console.log(window.deliverydateConfig);
            console.log(quote.getTotals);
            setInterval(this.flush.bind(this), 1000);
        },
        removePlace: function (place) {
            self.places.remove(place)
        },
        alertMe: function () {
            console.log('bingo 2');
            alert('bingo 2');
        },
        flush: function () {
            this.time(Date());
        },
        initConfig: function () {
            this._super();
            if (!this.options.dateFormat) {
                this.options.dateFormat = this.pickerDefaultDateFormat;
            }
            if (!this.options.timeFormat) {
                this.options.timeFormat = this.pickerDefaultTimeFormat;
            }
            this.prepareDateTimeFormats();
            return this;
        },
        prepareDateTimeFormats: function () {
            this.pickerDateTimeFormat = this.options.dateFormat;
            if (this.options.showsTime) {
                this.pickerDateTimeFormat += ' ' + this.options.timeFormat;
            }
            this.pickerDateTimeFormat = utils.normalizeDate(this.pickerDateTimeFormat);
            if (this.dateFormat) {
                this.inputDateFormat = this.dateFormat;
            }
            this.inputDateFormat = utils.normalizeDate(this.inputDateFormat);
            this.outputDateFormat = utils.normalizeDate(this.outputDateFormat);
            this.validationParams.dateFormat = this.outputDateFormat;
        },
        getTimeSlot: function () {
            list = [{
                    timeslot: 1
                }, {
                    timeslot: 2
                }]
            return list;
        }
    });
});
